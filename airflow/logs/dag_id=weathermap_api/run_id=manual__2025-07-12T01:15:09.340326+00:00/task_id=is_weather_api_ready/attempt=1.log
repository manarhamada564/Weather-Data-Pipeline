{"timestamp":"2025-07-12T01:15:09.980746","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-12T01:15:09.981362","level":"info","event":"Filling up the DagBag from /home/ubuntu/airflow/dags/weather_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-12T01:15:10.175454Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-12T01:15:10.175570Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-12T01:15:10.175623Z","level":"info","event":"Current task name:is_weather_api_ready","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-12T01:15:10.175666Z","level":"info","event":"Dag name:weathermap_api","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-12T01:15:10.153518","level":"info","event":"Poking: /data/2.5/weather?q=Portland&APPID=30135dbfb5e9413c344c5efc42a81e3b","logger":"airflow.task.operators.airflow.providers.http.sensors.http.HttpSensor"}
{"timestamp":"2025-07-12T01:15:10.184152","level":"info","event":"Connection Retrieved 'weathermap_api'","logger":"airflow.hooks.base"}
{"timestamp":"2025-07-12T01:15:10.284305","level":"info","event":"Success criteria met. Exiting.","logger":"airflow.task.operators.airflow.providers.http.sensors.http.HttpSensor"}
{"timestamp":"2025-07-12T01:15:10.305540Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-12T01:15:10.305660Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-12T01:15:10.305852Z","level":"info","event":"Task operator:<Task(HttpSensor): is_weather_api_ready>","chan":"stdout","logger":"task"}
