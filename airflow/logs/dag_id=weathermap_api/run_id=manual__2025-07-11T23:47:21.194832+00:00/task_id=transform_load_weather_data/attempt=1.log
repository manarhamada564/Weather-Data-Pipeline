{"timestamp":"2025-07-11T23:47:23.657579","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-11T23:47:23.658304","level":"info","event":"Filling up the DagBag from /home/ubuntu/airflow/dags/weather_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-11T23:47:23.707106Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T23:47:23.707245Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T23:47:23.707299Z","level":"info","event":"Current task name:transform_load_weather_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T23:47:23.707343Z","level":"info","event":"Dag name:weathermap_api","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T23:47:23.714736","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-11T23:47:23.735343Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T23:47:23.735467Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T23:47:23.735520Z","level":"info","event":"Task operator:<Task(PythonOperator): transform_load_weather_data>","chan":"stdout","logger":"task"}
